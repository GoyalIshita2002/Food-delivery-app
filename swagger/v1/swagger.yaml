---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    SuperAdminAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
    customerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    RestaurantOwnerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    DriverAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Superadmin
    description: Operations related to the superadmin endpoint
  - name: RestaurantOwner
    description: Operations related to the restaurant owner endpoint
  - name: Customer
    description: Operations related to the customer endpoint
  - name: Driver
    description: Operations related to the driver endpoint
paths:
  "/v1/super_admin/sign_in":
    post:
      tags:
        - Superadmin
      summary: create session
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                super_admin:
                  type: object
                  properties:
                    email:
                      type: string
                      default: "abc@kbc.com"
                    password:
                      type: string
                      default: "Avinash@345"
                  required:
                  - email
                  - password
              required:
              - super_admin
  "/v1/super_admin/blob_creation":
    post:
      tags:
        - Superadmin
      summary: blob_creation restaurant
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                   type: string
                   format: binary
            required:
              - avatar
  "/v1/super_admin/restaurants":
    post:
      tags:
        - Superadmin
      summary: create restaurant
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successfull     
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_admin:
                  type: object
                  properties:
                    email:
                      type: string
                      default: "restaurant38@fasthome.com"
                    user_name:
                      type: string
                      default: "sigireddy"
                    password:
                      type: string
                      default: "Avinash@123"
                    restaurant:
                      type: object
                      properties:
                        name:
                          type: string
                          default: "Bottega Restorentae"
                        registration_date:
                          type: string
                          format: date
                          default: "15/11/2023"
                        phone:
                          type: string
                          default: "9848022339"
                        lock_menu:
                          type: boolean
                          default: true
                        blob_id:
                          type: string
                          default: "1167"
                        restaurant_address:
                          type: object
                          properties:
                            street:
                              type: string
                              default: "madhura"
                            address1:
                              type: string
                              default: "Swan square, Sai nagar, Srinivasa Nagar"
                            address2:
                              type: string
                              default: "Madhurawada"
                            zip_code:
                              type: string
                              default: "530048"
                            state:
                              type: string
                              default: "Andhra Pradesh"
                            city:
                              type: string
                              default: "Visakhapatnam"
                            state_code:
                              type: string
                              default: "AP"
                        margins:
                          type: object
                          properties:
                            restaurant_percent:
                              type: integer
                              default: 10
                            customer_percent:
                              type: integer
                              default: 20
                        open_hours:
                          type: array
                          items:
                            type: object
                            properties:
                              day:
                                type: string
                              start_time:
                                type: string
                              end_time:
                                type: string
                              split_hours:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    start_at:
                                      type: string
                                    end_at:
                                      type: string
            required:
              - restaurant_admin
              - restaurant
    get:
      tags:
        - Superadmin
      summary: list restaurants
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successfull
      parameters:
        - in: query
          name: per_page
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: search
          description: 'Search restaurants by email, name, or phone number'
          schema:
            type: string
             
  "/v1/super_admin/restaurants/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      tags:
        - Superadmin
      summary: update restaurant
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_admin:
                  type: object
                  properties:
                    email:
                      type: string
                      default: "restaurant38@fasthome.com"
                    user_name:
                      type: string
                      default: "sigireddy"
                    password:
                      type: string
                      default: "Avinash@123"
                    restaurant:
                      type: object
                      properties:
                        name:
                          type: string
                          default: "Bottega Restorentae"
                        registration_date:
                          type: string
                          format: date
                          default: "15/11/2023"
                        phone:
                          type: string
                          default: "9848022339"
                        lock_menu:
                          type: boolean
                          default: true
                        blob_id:
                          type: string
                          default: "1167"
                        restaurant_address:
                          type: object
                          properties:
                            street:
                              type: string
                              default: "madhura"
                            address1:
                              type: string
                              default: "Swan square, Sai nagar, Srinivasa Nagar"
                            address2:
                              type: string
                              default: "Madhurawada"
                            zip_code:
                              type: string
                              default: "530048"
                            state:
                              type: string
                              default: "Andhra Pradesh"
                            city:
                              type: string
                              default: "Visakhapatnam"
                            state_code:
                              type: string
                              default: "AP"
                        margins:
                          type: object
                          properties:
                            restaurant_percent:
                              type: integer
                              default: 10
                            customer_percent:
                              type: integer
                              default: 20
                        open_hours:
                          type: array
                          items:
                            type: object
                            properties:
                              day:
                                type: string
                              start_time:
                                type: string
                              end_time:
                                type: string
                              split_hours:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    start_at:
                                      type: string
                                    end_at:
                                      type: string
            required:
              - restaurant_admin
              - restaurant

  "/v1/super_admin/restaurant/{id}/edit":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      tags:
        - Superadmin
      summary: edit restaurant
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful

  "/v1/super_admin/restaurant/{restaurant_id}/documents":
    parameters:
    - name: restaurant_id
      in: path
      description: restaurant_id
      required: true
      schema:
        type: string
    post:
      tags:
        - Superadmin
      summary: create document
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                   type: array
                   items:
                     type: string
                     format: binary
                name:
                  type: string
              required:
              - document
              - name
    get:
      tags:
        - Superadmin
      summary: list documents
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful

  "/v1/super_admin/restaurant/{restaurant_id}/documents/{id}":
    parameters:
    - name: restaurant_id
      in: path
      description: restaurant_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      tags:
        - Superadmin
      summary: delete document
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful

  "/v1/super_admin/users":
    get:
      tags:
        - Superadmin
      summary: list users
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successfull
      parameters:
        - in: query
          name: per_page
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer

  "/v1/super_admin/user/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      tags:
        - Superadmin
      summary: show user
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful

  "/v1/super_admin/customer_users":
    get:
      tags:
        - Superadmin
      summary: list customer_users
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successfull
      parameters:
        - in: query
          name: per_page
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: search
          description: 'Search customer by email, username, or phone number'
          schema:
            type: string

  "/v1/super_admin/customer_user/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      tags:
        - Superadmin
      summary: show customer_user
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful

  "/v1/super_admin/dish_type":
    post:
      tags:
        - Superadmin
      summary: create dish_type
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                   type: string
                   format: binary
                title:
                    type: string
            required:
              - image
              - title

  "/v1/super_admin/dish_types":
    put:
      tags:
        - Superadmin
      summary: update dish_type
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                   type: string
                   format: binary
                title:
                    type: string
                id:
                    type: integer
            required:
              - image
              - title
              - id
    
  "/v1/restaurant_owner/sign_in":
    post:
      tags:
        - RestaurantOwner
      summary: create session
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "restaurant12@fasthome.com"
                password:
                  type: string
                  default: "Avinash@123"
              required:
              - email
              - password

  "/v1/restaurant_owner/sign_out":
    delete:
      tags:
        - RestaurantOwner
      summary: delete session
      security:
      -  RestaurantOwnerAuth: []
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/password":
    put:
      tags:
        - RestaurantOwner
      summary: update password
      security:
      -  RestaurantOwnerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_owner:
                  type: object
                  properties:
                    email:
                      type: string
                      default: "restaurant12@fasthome.com"
                    current_password:
                      type: string
                      default: "Avinash@123"
                    password:
                      type: string
                    password_confirmation:
                      type: string  
              required:
              - email
              - current_password
              - password
              - password_confirmation

  "/v1/restaurant_owner/dishes":
    post:
      tags:
        - RestaurantOwner
      summary: create dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dish:
                  type: object
                  properties:
                    name:
                      type: string
                      default: "pizza"
                    dish_type:
                      type: integer
                      default: 2
                    price:
                      type: integer
                      default: 300
                    description:
                      type: string
                      default: "its traditional"
                    is_popular:
                      type: Boolean
                    add_ons:
                      type: array
                      items:
                        type: object
                        properties: 
                          id:
                            type: integer
                          name:
                            type: string
                          sub_item_ids:
                             type: array
                             items:
                                type: integer 
                                
              required:
              - dish
    get:
      tags:
        - RestaurantOwner
      summary: list all dishes of particular restaurant
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/dishes/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      tags:
        - RestaurantOwner
      summary: update dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dish:
                  type: object
                  properties:
                    name:
                      type: string
                      default: "pizza"
                    dish_type:
                      type: integer
                      default: 2
                    price:
                      type: integer
                      default: 300
                    description:
                      type: string
                      default: "its traditional"
                    is_popular:
                      type: Boolean
                    add_ons:
                      type: array
                      items:
                        type: object
                        properties: 
                          id:
                            type: integer
                          name:
                            type: string
                          sub_item_ids:
                             type: array
                             items:
                                type: integer 
                                
              required:
              - dish
      
    get:
      tags:
        - RestaurantOwner
      summary: show dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/dish/{id}/upload_image":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      tags:
        - RestaurantOwner
      summary: upload_image dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                   type: string
                   format: binary
            required:
              - image
    
  "/v1/restaurant_owner/grouped_dishes":
    get:
      tags:
        - RestaurantOwner
      summary: dishes_by_type dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/dish_types":
    get:
      tags:
        - RestaurantOwner
      summary: types dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/dish/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      tags:
        - RestaurantOwner
      summary: delete dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/popular_dishes":
    get:
      tags:
        - RestaurantOwner
      summary: popular dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/dishes_availability":
    put:
      tags:
        - RestaurantOwner
      summary: dishes_availability dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dishes:
                  type: object
                  properties:
                    available:
                      type: array
                      default: [5,9]
                    unavailable:
                      type: array
                      default: [8,5,7]

  "/v1/restaurant_owner/update_popular_dishes":
    put:
      tags:
        - RestaurantOwner
      summary: popular_dishes dish
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dishes:
                  type: object
                  properties:
                    popular:
                      type: array
                      default: [5,9]
                    unpopular:
                      type: array
                      default: [8,11]

  "/v1/restaurant_owner/restaurants/update":
    put:
      tags:
        - RestaurantOwner
      summary: update restaurant open for orders
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant:
                  type: object
                  properties:
                    open_for_orders:
                      type: boolean  
              required:
              - open_for_orders
      
  "/v1/restaurant_owner/add_ons":
    post:
      tags:
        - RestaurantOwner
      summary: create add_on
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                add_ons:
                  type: object
                  properties:
                    name:
                      type: string
                      default: "beverages"
                    items:
                      type: array
                      items:
                        type: object
                        properties: 
                          name:
                            type: string
                            default: "limca"
                          min_quantity:
                            type: integer
                            default: "1"
                          max_quantity:
                            type: integer
                            default: "10"
                          price:
                            type: integer
                            default: "25"
                      items:
                        -type: object
                        properties: 
                          name:
                            type: string
                            default: "cocola"
                          min_quantity:
                            type: integer
                            default: "2"
                          max_quantity:
                            type: integer
                            default: "4"
                          price:
                            type: integer
                            default: "298"
            
                                
              required:
              - add_ons
    get:
      tags:
        - RestaurantOwner
      summary: list add_ons
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/restaurant_owner/add_ons/{id}":
    put:
      tags:
        - RestaurantOwner
      summary: update add_on
      responses:
        '200':
          description: successful
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string 
        - name: id
          in: path
          description: The ID of the add_on to delete
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                add_ons:
                  type: object
                  properties:
                    name:
                      type: string
                      default: "beverages"
                    items:
                      type: array
                      items:
                        type: object
                        properties: 
                          name:
                            type: string
                            default: "limca"
                          min_quantity:
                            type: integer
                            default: "1"
                          max_quantity:
                            type: integer
                            default: "10"
                          price:
                            type: integer
                            default: "25"
                      items:
                        -type: object
                        properties: 
                          name:
                            type: string
                            default: "cocola"
                          min_quantity:
                            type: integer
                            default: "2"
                          max_quantity:
                            type: integer
                            default: "4"
                          price:
                            type: integer
                            default: "298"
            
                                
              required:
              - add_ons
    "/v1/restaurant_owner/add_ons/{id}":
    delete:
      tags:
        - RestaurantOwner
      summary: delete add_on
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the add_on to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
    "/v1/restaurant_owner/add_ons/{id}":
    get:
      tags:
        - RestaurantOwner
      summary: show add_on
      security:
        - RestaurantOwnerAuth: []
      parameters:
        - name: restaurant_id
          in: header
          description: The ID of the restaurant
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID of the add_on to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

    "/v1/customer/cart_items":
    post:
      summary: create cart_item
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_item:
                  type: object
                  properties:
                    dish_id:
                      type: integer
                      default: "2"
                    quantity:
                      type: integer
                      defualt: "3"
        required:
        - cart_items

  "/v1/customer/cart_items/{id}":
    get:
      tags:
        - Customer
      summary: show cart_item
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string

    "/v1/customer/cart_items/{id}":
    delete:
      tags:
        - Customer
      summary: delete cart_item
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string 

  "/v1/customer/show_cart":
    get:
      tags:
        - Customer
      summary: show cart
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful

  "/v1/customer/categories":
    get:
      tags:
        - Customer
      summary: list categories
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful

  "/v1/customer/addresses":
    post:
      tags:
        - Customer
      summary: create customer_address
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      default: "burujupeta"
                    address:
                      type: string
                      default: "town kotha road"
                    city:
                      type: string
                      default: "visakhapatnam"
                    state:
                      type: string
                      default: "Andhra Pradesh"
                    zip_code:
                      type: integer
                      default: "530001"
                    address_type:
                      type: string
                      default: "office"
                    is_default:
                      type: boolean
                      default: "true"
                    
        required:
        - address

  "/v1/customer/addresses/":
    get:
      tags:
        - Customer
      summary: list customer_addresses
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
          

  "/v1/customer/addresses/{id}":
    put:
      tags:
        - Customer
      summary: update customer_address
      security:
        - customerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: object
                  properties:
                    is_default:
                      type: boolean
                      default: "true"
                    address_type:
                      type: string
                      default: "home"
      required:
        - address

  "/v1/customer/dishes":
    get:
      tags:
        - Customer
      summary: list dishes
      security:
        - customerAuth: []
      parameters:
        - name: restaurant_id
          in: query
          description: The ID of the restaurant
          required: true
          schema:
            type: integer
        - name: type
          in: query
          description: The Dish type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/customer/grouped_dishes":
    get:
      tags:
        - Customer
      summary: grouped_dishes dish
      security:
        - customerAuth: []
      parameters:
        - name: restaurant_id
          in: query
          description: The Id of restaurant
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful

  "/v1/customer/favourites/add_restaurant":
    post:
      tags:
        - Customer
      summary: add_restaurant favourite
      security:
        - customerAuth: []
      parameters:
        - name: restaurant_id
          in: query
          description: The Id of restaurant
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful

  "/v1/customer/favourites/add_dish":
    post:
      tags:
        - Customer
      summary: add_dish favourite
      security:
        - customerAuth: []
      parameters:
        - name: dish_id
          in: query
          description: The Id of dish
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful

  "/v1/customer/favourites/remove_restaurant":
    delete:
      tags:
        - Customer
      security:
        - customerAuth: []
      parameters:
        - name: restaurant_id
          in: query
          description: The Id of restaurant
          required: true
          schema:
            type: integer
      summary: remove_restaurant favourite
      responses:
        '200':
          description: successful

          
  "/v1/customer/favourites/remove_dish":
    delete:
      tags:
        - Customer
      summary: remove_dish favourite
      security:
        - customerAuth: []
      parameters:
        - name: dish_id
          in: query
          description: The Id of dish
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful


  "/v1/customer/favourite_restaurants":
    get:
      tags:
        - Customer
      summary: list_restaurants favourite
      security:
        - customerAuth: []
      parameters:
        - name: per_page
          in: query
          description: The per page restaurants
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: The page number
          required: true
          schema:
            type: integer
        - name: search
          in: query
          description: The search parameter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful


  "/v1/customer/favourite_dishes":
    get:
      tags:
        - Customer
      summary: list_dishes favourite
      security:
        - customerAuth: []
      parameters:
        - name: per_page
          in: query
          description: The per page restaurants
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: The page number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful


  "/v1/customer/check_email_availability":
    get:
      summary: check_email_availability miscellaneou
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful

  "/v1/customer/orders":
    post:
      tags:
        - Customer
      summary: create order
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_id:
                  type: integer
                  default: "1"
                restaurant_id:
                  type: integer
                  default: "1"
                customer_address_id:
                  type: integer
                  default: "1"
                content:
                  type: string
                  default: "Dont add onion"
                    
      required:
        - cart     

  "/v1/customer/orders":
    get:
      tags:
        - Customer
      summary: list orders
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      
  "/v1/customer/orders/{order_id}":
    put:
      tags:
        - Customer
      summary: denied order
      security:
        - customerAuth: []
      parameters:
        - name: order_id
          in: path
          description: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/customer/orders/{order_id}":
    get:
      tags:
        - Customer
      summary: show order
      security:
        - customerAuth: []
      parameters:
        - name: order_id
          in: path
          description: order_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/customer/order/{order_id}/customer_feedback":
    post:
      tags:
        - Customer
      summary: customer_feedback order
      security:
        - customerAuth: []
      parameters:
        - name: order_id
          in: path
          description: order_id
          required: true
          schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: "Delay"
                description:
                  type: string
                  default: "Food is not received on time"   
      required:
        - order   

  "/v1/customer/order_history":
    get:
      tags:
        - Customer
      summary: order_history order
      security:
        - customerAuth: []
      parameters:
      - name: status
        in: query
        description: The status of the orders
        required: true
        schema:
          type: string
          default: "ongoing"
      responses:
        '200':
          description: successful


  
  "/v1/customer/resend_otp":
    post:
      tags:
        - Customer
      summary: resend_otp profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "shivani@12gmail.com"
        
  "/v1/customer/verify_customer":
    post:
      tags:
        - Customer
      summary: verify_otp profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "shivani@12gmail.com"
                otp:
                  type: integer
                  default: "3474"
                  
  "/v1/customer/forget_password":
    post:
      tags:
        - Customer
      summary: forget_password profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: "shivani@12gmail.com"
                  
  "/v1/customer/reset_password":
    post:
      tags:
        - Customer
      summary: reset_password profile
      security:
        - customerAuth: []
      parameters:
        - name: reset_token
          in: query
          description: The reset token 
          required: true
          schema:
            type: string
            default: "Br_iaJgxZwVr_HjjuS11LQ"
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: integer
                  default: "123456"

  "/v1/customer/profile":
    put:
      tags:
        - Customer
      summary: update profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  default: "avinash"
                std_code:
                  type: integer
                  default: "91"
                dob:
                  type: integer
                  default: "04/01/1995"

  "/v1/customer/profile":
    get:
      tags:
        - Customer
      summary: show profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful

  "/v1/customer/delete_avatar":
    post:
      tags:
        - Customer
      summary: delete_avatar profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  default: "Screenshot from 2024-01-03 11-32-18.png"

  "/v1/customer/update_password":
    patch:
      tags:
        - Customer
      summary: update_password profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successfulc
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  default: "Shiv@123"
                password:
                  type: string
                  default: "Avinash@1234"
                password_confirmation:
                  type: string
                  default: "Avinash@1234"

  "/v1/customer/update_phone":
    patch:
      tags:
        - Customer
      summary: update_phone profile
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  default: "987654321`"

    
  "/v1/customer":
    post:
      tags:
        - Customer
      summary: registration a user
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    username:
                      type: string
                      default: "shivani"
                    email:
                      type: string
                      default: "shiv@12gmail.com"
                    phone:
                      type: integer
                      default: "7654321"
                    std_code:
                      type: integer
                      default: "91"
                    password:
                      type: string
                      default: "11234567"
                    password_confirmation:
                      type: string
                      default: "11234567"  
                    
  "/v1/customer/restaurant_ratings/add_rating":
    post:
      tags:
        - Customer
      summary: add_rating restaurant_rating
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  default: "3"
                restaurant_id:
                  type: integer
                  default: "1"

  "/v1/customer/restaurants":
    get:
      tags:
        - Customer
      summary: list restaurants
      security:
        - customerAuth: []
      parameters:
        - name: per_page
          in: query
          description: per page 
          required: true
          schema:
            type: integer
            default: 4
            
        - name: page
          in: query   
          description:  page 
          required: true
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: successful

  "/v1/customer/restaurants/{id}":
    get:
      tags:
        - Customer
      summary: show restaurant
      security:
        - customerAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/customer/sign_in":
    post:
      tags:
        - Customer
      summary: create session
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: integer
                  default: "shiv@1234gmail.com"
                password:
                  type: integer
                  default: "Avinash@123"

  "/v1/customer/sign_out":
    delete:
      tags:
        - Customer
      summary: delete session
      security:
        - customerAuth: []
      responses:
        '200':
          description: successful
      

  "/v1/driver/documents":
    post:
      tags: 
        - Driver
      summary: create document
      security:
        - DriverAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                front:
                  type: string
                  format: binary
                  default: "Screenshot from 2024-01-03 11-32-18.png"
                back:
                  type: string
                  format: binary
                  default: "Screenshot from 2024-01-03 11-32-18.png"

    get:
      tags: 
        - Driver
      summary: list documents
      security:
        - DriverAuth: []
      responses:
        '200':
          description: successful
          
  "/v1/driver/documents/{id}":
    delete:
      tags: 
        - Driver
      summary: delete document
      security:
        - DriverAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful

  "/v1/driver/orders/{id}":
    put:
      tags: 
        - Driver
      summary: update order
      security:
        - DriverAuth: []
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
          '200':
            description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  default: "driver_picked_up"

  "/v1/driver/{driver_id}/orders":
    get:
      tags: 
        - Driver
      summary: list orders
      security:
        - DriverAuth: []
      parameters:
        - name: driver_id
          in: path
          description: driver_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful


  "/v1/driver/update":
    put:
      tags: 
        - Driver
      summary: update profile
      security:
        - DriverAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  default: "sharma Mittal"
                dob:
                  type: string
                  default: "1/08/2007"
                email:
                  type: string
                  default: "sha5678@gmail.com"
                address:
                  type: string
                  default: "Panna"

  "/v1/driver/delete_avatar":
    post:
      tags: 
        - Driver
      summary: delete_avatar profile
      security:
        - DriverAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  default: "Screenshot from 2024-01-03 11-32-18.png"

  "/v1/driver/profile":
    get:
      tags: 
        - Driver
      summary: show profile
      security:
        - DriverAuth: []
      responses:
        '200':
          description: successful

  "/v1/driver/resend_otp":
    post:
      tags: 
        - Driver
      summary: resend_otp profile
      security:
        - DriverAuth: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: integer
                  default: 876544344
                std_code:
                  type: integer
                  default: 91
            

  "/v1/driver/register":
    post:
      summary: create registration
      responses:
        '200':
          description: successful
  "/v1/driver/service_details":
    post:
      summary: create service_detail
      responses:
        '200':
          description: successful
  "/v1/driver/sign_in":
    post:
      summary: create session
      responses:
        '200':
          description: successful
  "/v1/driver/sign_out":
    delete:
      summary: delete session
      responses:
        '200':
          description: successful
  "/v1/countries":
    get:
      summary: list miscellaneou
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/total_analysts":
    get:
      summary: analysts dashboard
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/weekly_earning":
    get:
      summary: weekly_update dashboard
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/orders/{order_id}":
    parameters:
    - name: order_id
      in: path
      description: order_id
      required: true
      schema:
        type: string
    get:
      summary: show order
      responses:
        '200':
          description: successful
    put:
      summary: update order
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/orders":
    get:
      summary: list orders
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/profile/update":
    put:
      summary: update profile
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/profile/upload_image":
    post:
      summary: upload_image profile
      responses:
        '200':
          description: successful
  "/v1/restaurant_owner/profile":
    get:
      summary: show profile
      responses:
        '200':
          description: successful

  "/v1/super_admin/drivers/{driver_id}/revenue_by_day":
    parameters:
    - name: driver_id
      in: path
      description: driver_id
      required: true
      schema:
        type: string
    get:
      tags:
        - Superadmin
      summary: revenue_by_day driver
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - in: query
          name: start_date
          schema:
            type: datetime
        - in: query
          name: end_date
          schema:
            type: datetime
  "/v1/super_admin/drivers":
    get:
      tags:
        - Superadmin
      summary: list drivers
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - in: query
          name: search
          description: 'Search driver by email, full name, or phone number'
          schema:
            type: string
  "/v1/super_admin/delivery_charges/upsert":
    post:
      tags:
        - Superadmin
      summary: upsert driver
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - in: query
          name: min_distance
          schema:
            type: integer
        - in: query
          name: max_distance
          schema:
            type: integer
        - in: query
          name: charge
          schema:
            type: integer       
  "/v1/super_admin/drivers/{driver_id}/orders":
    parameters:
    - name: driver_id
      in: path
      description: driver_id
      required: true
      schema:
        type: string
    get:
      tags:
        - Superadmin
      summary: Show all order of particular driver
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
  "/v1/super_admin/assign_driver/{order_id}":
    parameters:
    - name: order_id
      in: path
      description: order_id
      required: true
      schema:
        type: string
    post:
      tags:
        - Superadmin
      summary: assign_driver order
      security:
      - SuperAdminAuth: []
      parameters:
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                driver_id:
                  type: integer
              required:
              - driver_id
  "/v1/super_admin/accept_order/{order_id}":
    put:
      tags:
        - Superadmin
      summary: accept_order order
      security:
      - SuperAdminAuth: []
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - admin_accepted
                  - admin_denied
              required:
              - status
  "/v1/super_admin/placed_order":
    get:
      tags:
        - Superadmin
      summary: placed_order order
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - in: query
          name: per_page
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string 
  "/v1/super_admin/order_without_driver":
    get:
      tags:
        - Superadmin
      summary: orders_without_agent order
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
      parameters:
        - in: query
          name: per_page
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string         
  "/v1/super_admin/restaurant/{restaurant_id}/order_status":
    parameters:
    - name: restaurant_id
      in: path
      description: restaurant_id
      required: true
      schema:
        type: string
    post:
      tags:
        - Superadmin
      summary: order_statistics order
      security:
      - SuperAdminAuth: []
      summary: order_status order
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - restaurant_accepted
                  - driver_picked_up
                  - delivered
              required:
              - status
  "/v1/super_admin/orders/statistics":
    get:
      tags:
        - Superadmin
      summary: order_statistics order
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
  "/v1/super_admin/placed_orders_by_hours":
    get:
      tags:
        - Superadmin
      summary: placed_orders_by_hours order
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
  "/v1/super_admin/ongoing_orders_statistics":
    get:
      tags:
        - Superadmin
      summary: orders_ongoing_stats order
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful
  "/v1/super_admin/orders_unfilled_stats":
    get:
      tags:
        - Superadmin
      summary: orders_unfilled_stats order
      security:
      - SuperAdminAuth: []
      responses:
        '200':
          description: successful

  "/v1/super_admin/orders":
    get:
      tags:
        - Superadmin
      summary: list orders
      security: 
      -  SuperAdminAuth: []
      responses:
        '200':
          description: successful

servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000/
